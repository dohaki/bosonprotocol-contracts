/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IBosonRouterContract
  extends Truffle.Contract<IBosonRouterInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<IBosonRouterInstance>;
}

type AllEvents = never;

export interface IBosonRouterInstance extends Truffle.ContractInstance {
  _beforeERC1155Transfer(
    _from: string,
    _tokenSupplyId: number | BN | string,
    _value: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<void>;

  _onERC1155Transfer: {
    (
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  _onERC721Transfer: {
    (
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  cancelOrFault: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  complain: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  pause: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  redeem: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  refund: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCancelOrFaultVoucherSet: {
    (
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderETHETH: {
    (
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderETHTKNWithPermit: {
    (
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderTKNETH: {
    (
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderTKNTKNWithPermit: {
    (
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherETHETH: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherETHTKNWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherTKNETHWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherTKNTKNSameWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherTKNTKNWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setTokenContractAddress: {
    (
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  unpause: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  methods: {
    _beforeERC1155Transfer(
      _from: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;

    _onERC1155Transfer: {
      (
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    _onERC721Transfer: {
      (
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    cancelOrFault: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    complain: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    pause: {
      (txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
      estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
    };

    redeem: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    refund: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCancelOrFaultVoucherSet: {
      (
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderETHETH: {
      (
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderETHTKNWithPermit: {
      (
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderTKNETH: {
      (
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderTKNTKNWithPermit: {
      (
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherETHETH: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherETHTKNWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherTKNETHWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherTKNTKNSameWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherTKNTKNWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setTokenContractAddress: {
      (
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    unpause: {
      (txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
      estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
    };
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
