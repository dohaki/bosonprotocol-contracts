/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface BosonRouterContract
  extends Truffle.Contract<BosonRouterInstance> {
  "new"(
    _voucherKernel: string,
    _tokensContractAddress: string,
    _fundLimitsOracle: string,
    _cashierAddress: string,
    meta?: Truffle.TransactionDetails
  ): Promise<BosonRouterInstance>;
}

export interface LogOrderCreated {
  name: "LogOrderCreated";
  args: {
    _tokenIdSupply: BN;
    _seller: string;
    _quantity: BN;
    _paymentType: BN;
    _correlationId: BN;
    0: BN;
    1: string;
    2: BN;
    3: BN;
    4: BN;
  };
}

export interface LogTokenContractSet {
  name: "LogTokenContractSet";
  args: {
    _newTokenContract: string;
    _triggeredBy: string;
    0: string;
    1: string;
  };
}

export interface OwnershipTransferred {
  name: "OwnershipTransferred";
  args: {
    previousOwner: string;
    newOwner: string;
    0: string;
    1: string;
  };
}

export interface Paused {
  name: "Paused";
  args: {
    account: string;
    0: string;
  };
}

export interface Unpaused {
  name: "Unpaused";
  args: {
    account: string;
    0: string;
  };
}

type AllEvents =
  | LogOrderCreated
  | LogTokenContractSet
  | OwnershipTransferred
  | Paused
  | Unpaused;

export interface BosonRouterInstance extends Truffle.ContractInstance {
  _beforeERC1155Transfer(
    _from: string,
    _tokenSupplyId: number | BN | string,
    _value: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<void>;

  _onERC1155Transfer: {
    (
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string,
      _to: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  _onERC721Transfer: {
    (
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _from: string,
      _to: string,
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  cancelOrFault: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  cashierAddress(txDetails?: Truffle.TransactionDetails): Promise<string>;

  complain: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  correlationIds(
    arg0: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  fundLimitsOracle(txDetails?: Truffle.TransactionDetails): Promise<string>;

  owner(txDetails?: Truffle.TransactionDetails): Promise<string>;

  pause: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  paused(txDetails?: Truffle.TransactionDetails): Promise<boolean>;

  redeem: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  refund: {
    (
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdVoucher: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  renounceOwnership: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  requestCancelOrFaultVoucherSet: {
    (
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderETHETH: {
    (
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderETHTKNWithPermit: {
    (
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderTKNETH: {
    (
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenPriceAddress: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestCreateOrderTKNTKNWithPermit: {
    (
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenPriceAddress: string,
      _tokenDepositAddress: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      metadata: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherETHETH: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherETHTKNWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensDeposit: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherTKNETHWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensPrice: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherTKNTKNSameWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      v: number | BN | string,
      r: string,
      s: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requestVoucherTKNTKNWithPermit: {
    (
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokenIdSupply: number | BN | string,
      _issuer: string,
      _tokensSent: number | BN | string,
      deadline: number | BN | string,
      vPrice: number | BN | string,
      rPrice: string,
      sPrice: string,
      vDeposit: number | BN | string,
      rDeposit: string,
      sDeposit: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setTokenContractAddress: {
    (
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _tokensContractAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  tokensContractAddress(
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  transferOwnership: {
    (newOwner: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      newOwner: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      newOwner: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      newOwner: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  unpause: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  voucherKernel(txDetails?: Truffle.TransactionDetails): Promise<string>;

  methods: {
    _beforeERC1155Transfer(
      _from: string,
      _tokenSupplyId: number | BN | string,
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;

    _onERC1155Transfer: {
      (
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _from: string,
        _to: string,
        _tokenSupplyId: number | BN | string,
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    _onERC721Transfer: {
      (
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _from: string,
        _to: string,
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    cancelOrFault: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    cashierAddress(txDetails?: Truffle.TransactionDetails): Promise<string>;

    complain: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    correlationIds(
      arg0: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    fundLimitsOracle(txDetails?: Truffle.TransactionDetails): Promise<string>;

    owner(txDetails?: Truffle.TransactionDetails): Promise<string>;

    pause: {
      (txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
      estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
    };

    paused(txDetails?: Truffle.TransactionDetails): Promise<boolean>;

    redeem: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    refund: {
      (
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdVoucher: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    renounceOwnership: {
      (txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
      estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
    };

    requestCancelOrFaultVoucherSet: {
      (
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderETHETH: {
      (
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderETHTKNWithPermit: {
      (
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderTKNETH: {
      (
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenPriceAddress: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestCreateOrderTKNTKNWithPermit: {
      (
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenPriceAddress: string,
        _tokenDepositAddress: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        metadata: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherETHETH: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherETHTKNWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensDeposit: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherTKNETHWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensPrice: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherTKNTKNSameWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        v: number | BN | string,
        r: string,
        s: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requestVoucherTKNTKNWithPermit: {
      (
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokenIdSupply: number | BN | string,
        _issuer: string,
        _tokensSent: number | BN | string,
        deadline: number | BN | string,
        vPrice: number | BN | string,
        rPrice: string,
        sPrice: string,
        vDeposit: number | BN | string,
        rDeposit: string,
        sDeposit: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setTokenContractAddress: {
      (
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _tokensContractAddress: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    tokensContractAddress(
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    transferOwnership: {
      (newOwner: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        newOwner: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        newOwner: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        newOwner: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    unpause: {
      (txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
      estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
    };

    voucherKernel(txDetails?: Truffle.TransactionDetails): Promise<string>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
